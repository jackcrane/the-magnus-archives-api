// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Episode {
  id String @id @default(uuid())

  tags EpisodeTag[]
  statementOf String?
  recorder String?
  voiced EpisodeVoice[]
  title String
  episodeNumber String
  caseNumber String?
  statementDate DateTime?
  recordingDate DateTime?
  eventDate String?
  summary String @db.MediumText
  flags EpisodeFlags[]
  acastUrl String
  wikiUrl String?
  transcript String @db.MediumText

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model EpisodeFlags {
  @@id([episodeId, flagId])
  episodeId String
  episode Episode @relation(fields: [episodeId], references: [id])
  flagId String
  flag Flag @relation(fields: [flagId], references: [id])
}

model Voice {
  id String @id @default(uuid())
  name String @unique
  episodes EpisodeVoice[]
}

model EpisodeVoice {
  @@id([episodeId, voiceId])
  episodeId String
  episode Episode @relation(fields: [episodeId], references: [id])
  voiceId String
  voice Voice @relation(fields: [voiceId], references: [id])
}

model Flag {
  id String @id @default(uuid())
  text String @unique @db.VarChar(255)
  episodes EpisodeFlags[]
}

model EpisodeTag {
  @@id([episodeId, tagId])
  episodeId String
  episode Episode @relation(fields: [episodeId], references: [id])
  tagId String
  tag Tag @relation(fields: [tagId], references: [id])
}

model Tag {
  id String @id @default(uuid())
  text String @unique
  episodes EpisodeTag[]
}

model Updates {
  id String @id @default(uuid())
  changelog String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}